{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css'; // here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n// this app component represents the entire application\n// this is a best practice\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // here is an array full of objects\n      monsters: [{\n        name: \"Linda\"\n      }, {\n        name: \"Frank\"\n      }, {\n        name: \"Jacky\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => {\n        // need key value - makes react more optimised\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","name","render","map","monster","id"],"sources":["/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js"],"sourcesContent":["\nimport { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n\n\n// this app component represents the entire application\n// this is a best practice\nclass App extends Component {\n  constructor() {\n    super();\n\n      this.state = {\n        // here is an array full of objects\n        monsters: [\n          {\n            name: \"Linda\",\n          },\n          {\n            name: \"Frank\",\n          },\n          {\n            name: \"Jacky\",\n          },\n        ]\n      };\n  }\n\n\n  render() { \n    return ( \n    <div className=\"App\">\n      {this.state.monsters.map((monster) => {\n          // need key value - makes react more optimised\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })\n      } \n\n    </div>\n    );\n  }\n\n} \n\nexport default App;\n"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AAGA;AACA;;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAC1BG,WAAW,GAAG;IACZ;IAEE,KAAKC,KAAL,GAAa;MACX;MACAC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE;MADR,CADQ,EAIR;QACEA,IAAI,EAAE;MADR,CAJQ,EAOR;QACEA,IAAI,EAAE;MADR,CAPQ;IAFC,CAAb;EAcH;;EAGDC,MAAM,GAAG;IACP,oBACA;MAAK,SAAS,EAAC,KAAf;MAAA,UACG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,GAApB,CAAyBC,OAAD,IAAa;QAClC;QACA,oBACE;UAAA,uBACE;YAAA,UAAKA,OAAO,CAACH;UAAb;YAAA;YAAA;YAAA;UAAA;QADF,GAAUG,OAAO,CAACC,EAAlB;UAAA;UAAA;UAAA;QAAA,QADF;MAKD,CAPF;IADH;MAAA;MAAA;MAAA;IAAA,QADA;EAcD;;AApCyB;;AAwC5B,eAAeR,GAAf"},"metadata":{},"sourceType":"module"}