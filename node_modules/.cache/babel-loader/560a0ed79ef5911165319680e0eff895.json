{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css'; // here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // you gotta call super() when you call component\n    super(); // here's our object.\n\n    this.state = {\n      name: {\n        firstName: \"Gabriel\",\n        lastName: \"Nathan\"\n      },\n      company: \"ZTM\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hi, I am \", this.state.name.firstName, \" \", this.state.name.lastName, \", I work at \", this.state.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          // react lets us have event handlers like onClick\n          // we run a function inside it by wrapping it with {}\n          // then we can run the .set.state() method and pass in an object\n          // that we want it to shallow merge with your current state object:\n          // shall merge: whatever values you give me, i'll check if they have the same keys\n          onClick: () => {\n            // here we pass setState an object:\n            // this.setState({ name: {firstName: \"Andrei\", lastName: \"Naegioe\"} });\n            // console.log(this.state);\n            // here we pass it a function\n            this.setState((state, props) => {\n              return {\n                name: {\n                  firstName: \"Andrei\",\n                  lastName: \"Naegioe\"\n                }\n              };\n            }, () => {});\n          },\n          children: \"Change Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","name","firstName","lastName","company","render","setState","props"],"sources":["/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js"],"sourcesContent":["\nimport { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n\n\nclass App extends Component {\n\n  constructor() {\n    // you gotta call super() when you call component\n    super();\n      // here's our object.\n      this.state = {\n        name: { firstName: \"Gabriel\", lastName: \"Nathan\" },\n        company: \"ZTM\"\n      };\n  }\n\n\n  render () { \n    return (\n      <div className=\"App\"> \n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Hi, I am {this.state.name.firstName} {this.state.name.lastName}\n            , I work at {this.state.company}\n          </p>\n          <button \n\n            // react lets us have event handlers like onClick\n            // we run a function inside it by wrapping it with {}\n            // then we can run the .set.state() method and pass in an object\n            // that we want it to shallow merge with your current state object:\n            // shall merge: whatever values you give me, i'll check if they have the same keys\n\n            onClick={() => {\n              // here we pass setState an object:\n              // this.setState({ name: {firstName: \"Andrei\", lastName: \"Naegioe\"} });\n              // console.log(this.state);\n\n              // here we pass it a function\n              this.setState((state, props) => {\n                return { name: {firstName: \"Andrei\", lastName: \"Naegioe\"} }\n              }, () => {});\n            }}\n          >\n            Change Name\n          </button>\n        </header>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;;;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAE1BG,WAAW,GAAG;IACZ;IACA,QAFY,CAGV;;IACA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE;QAAEC,SAAS,EAAE,SAAb;QAAwBC,QAAQ,EAAE;MAAlC,CADK;MAEXC,OAAO,EAAE;IAFE,CAAb;EAIH;;EAGDC,MAAM,GAAI;IACR,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA,wBACE;UAAK,GAAG,EAAER,IAAV;UAAgB,SAAS,EAAC,UAA1B;UAAqC,GAAG,EAAC;QAAzC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,wBACY,KAAKG,KAAL,CAAWC,IAAX,CAAgBC,SAD5B,OACwC,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,QADxD,kBAEe,KAAKH,KAAL,CAAWI,OAF1B;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAEE;UACA;UACA;UACA;UACA;UAEA,OAAO,EAAE,MAAM;YACb;YACA;YACA;YAEA;YACA,KAAKE,QAAL,CAAc,CAACN,KAAD,EAAQO,KAAR,KAAkB;cAC9B,OAAO;gBAAEN,IAAI,EAAE;kBAACC,SAAS,EAAE,QAAZ;kBAAsBC,QAAQ,EAAE;gBAAhC;cAAR,CAAP;YACD,CAFD,EAEG,MAAM,CAAE,CAFX;UAGD,CAjBH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAgCD;;AA9CyB;;AAkD5B,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}