{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css'; // here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n// this app component represents the entire application\n// this is a best practice\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [{\n        name: \"Linda\"\n      }, {\n        name: \"Frank\"\n      }, {\n        name: \"Jacky\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.monster1.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.monster2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.monster3.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","name","render","monster1","monster2","monster3"],"sources":["/Users/gabrielnathan/WEBSITES/monsters-rolodex/src/App.js"],"sourcesContent":["\nimport { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// here we replaced the function App() {}\n//                              return () \n// with the following, everything wrapped also inside the render () method.\n// this is a class compenent, instead of a functional component\n\n\n// this app component represents the entire application\n// this is a best practice\nclass App extends Component {\n  constructor() {\n    super();\n\n      this.state = {\n        monsters: [\n          {\n            name: \"Linda\",\n          },\n          {\n            name: \"Frank\",\n          },\n          {\n            name: \"Jacky\",\n          },\n        ]\n      };\n  }\n\n\n  render() { \n    return <div className=\"App\">\n       <h1>{this.state.monster1.name}</h1>\n       <h1>{this.state.monster2.name}</h1>\n       <h1>{this.state.monster3.name}</h1>\n    </div>; \n  }\n \n} \n\nexport default App;\n"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AAGA;AACA;;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAC1BG,WAAW,GAAG;IACZ;IAEE,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE;MADR,CADQ,EAIR;QACEA,IAAI,EAAE;MADR,CAJQ,EAOR;QACEA,IAAI,EAAE;MADR,CAPQ;IADC,CAAb;EAaH;;EAGDC,MAAM,GAAG;IACP,oBAAO;MAAK,SAAS,EAAC,KAAf;MAAA,wBACJ;QAAA,UAAK,KAAKH,KAAL,CAAWI,QAAX,CAAoBF;MAAzB;QAAA;QAAA;QAAA;MAAA,QADI,eAEJ;QAAA,UAAK,KAAKF,KAAL,CAAWK,QAAX,CAAoBH;MAAzB;QAAA;QAAA;QAAA;MAAA,QAFI,eAGJ;QAAA,UAAK,KAAKF,KAAL,CAAWM,QAAX,CAAoBJ;MAAzB;QAAA;QAAA;QAAA;MAAA,QAHI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EAKD;;AA1ByB;;AA8B5B,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}